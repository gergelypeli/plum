# First example


f? :function Integer from:
    x? Integer
    y? Integer
as:
    :return x * 2 + y * 3


g? :function Integer from:
    xxx? Integer Ovalue
    yyy? Integer Ovalue
as:
    :return xxx + yyy
    

start? :function as:
    print(f(1, 2))
    
    a? Integer
    a = 2
    b? Integer
    b = 3
    
    :if a == b then: prints("a == b") else: prints("a != b")
    
    :if a < b && a > b then: prints("Huh?") else: prints("Huh.")
    
    c? Integer
    c = :if a == b then: 100 else: 200
    prints("This should be 200: {c}" {})
    
    d? 6u8
    d += 7u8
    d = d * d
    
    :if d then: prints("Yes, d is nonzero.")

    prints("Hello!")

    s? "Szia!"
    prints(s)
    
    #c = 4
    #printu8(s[c])
    
    prints(s + s)

    s[3] = s[4]
    prints(s)

    z? Character Array
    prints(z || "Ez tök 대박")
    
    :if z == Character Array Reference `null then: prints("z is null")
    
    z = s
    printb(z encode_utf8)

    :if z == `null then: prints("z is null")

    #(1, 2) + (3, 4)

    :if a == a then:
        zz? "ZZ"
        prints(zz)
    
    prints((xx? "hi") + xx)
    
    prints(333 stringify)

    prints("XXXXX{a}YYYYY" {})

    prints("{six} and {seven}" { six: 6, seven: 7 })

    Myenum? :Enumeration
        FOO?, BAR?, BAZ?

    fbb? Myenum `FOO
    :if fbb == `FOO then: prints("fbb is FOO") else: prints("fbb is not FOO")

    Myint? :Integer bytes: 8 is_unsigned: `false
    myvar? Myint

    print(g(100, 100))
    print(g(100))
    print(g)

    :return
